/* * { */
  /* box-sizing: border-box; */
/* } */

.App {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  background-color: rgb(85%, 85%, 85%);
}

#top-panel {
  flex: 0;
}

#bottom-panel {
  flex: 1;
  display: flex;
  flex-direction: row;
}

#left-panel {
  display: flex;
  flex-direction: column;
  flex: 1;
}

#right-panel {
  flex: 3;
  display: flex;
  flex-direction: column;
}

#prompter-panel {
  background-color: green;
  grid-row: 1 / span 1;
  grid-column: 1 / span 2;
  display: flex;
  align-items: center;
}

h1 {
  font-weight: normal;
  font-size: 14pt;
  margin: 0;
  margin-bottom: 5px;
  font-variant: small-caps;
  color: #888888;
}

#top-bottom-separator, #evaluator-memory-separator, #program-console-separator {
  height: 10px;
}

#left-right-separator, #stack-heap-separator {
  width: 10px;
}

#message {
  font-size: 24pt;
}

#program {
  font-size: 18pt;
  overflow: auto;
  white-space: nowrap;
}

#console {
  white-space: pre;
}

#evaluator {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

#left-right-separator, #stack-heap-separator {
  cursor: col-resize;
}

#top-bottom-separator, #program-console-separator, #evaluator-memory-separator {
  cursor: row-resize;
}

#expression, #evaluate-box {
  user-select: none;
  font-size: 24pt;
}

.code {
  font-family: 'Inconsolata', monospace;
}

.evaluatable {
  display: inline-block;
}

/* .binary-infix-operator { */
  /* margin: 0 15px; */
/* } */

.literal {
  color: red;
}

.hovered {
  background-color: cornflowerblue;
}

.subexpression {
  display: inline-block;
  padding: 3px initial;
}

.active {
  background: cornflowerblue;
  border-radius: 10px;
}

.subexpression {
  position: relative;
}

.evaluate-popup {
  position: absolute;
  left: 50%;
  bottom: 0px;
  transform: translate(-50%, 100%);
}

.evaluate-popup svg {
  display: block;
  margin: 0 auto 5px auto;
  fill: cornflowerblue;
}

#evaluate-box {
  text-align: center;
}

.shaking {
  transform: translateX(0);
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
}

@keyframes shake {
   10%, 90% { transform: translateX(-1px); }
   20%, 80% { transform: translateX(2px); }
   30%, 50%, 70% { transform: translateX(-4px); }
   40%, 60% { transform: translateX(4px); }
}

#memory-panel {
  display: flex;
  flex-direction: row;
}

#heap-panel, #stack-panel, #evaluator-panel, #program-panel, #console-panel, #prompter-panel {
  padding: 10px;
  box-shadow: rgba(0,0,0,0.2) 0px 2px 3px, inset rgba(0,0,0,0.2) 0px -1px 2px;
  background-color: white;
  margin: 0;
}

#console-panel {
  flex: 1;
  background-color: #FFFBE6;
  border-top-right-radius: 5px;
}

#stack-panel {
  flex: 1;
  background-color: rgb(85%, 85%, 85%);
  grid-row: 3 / span 1;
  grid-column: 2 / span 1;
  overflow: auto;
  border-radius: 5px 5px 0 0;
  background-color: #E8DCD1;
}

#heap-panel {
  flex: 1;
  border-radius: 5px 0 0 0;
  background-color: #E0D1E8;
}

#program-panel {
  flex: 4;
  grid-row: 2 / span 2;
  grid-column: 1 / span 1;
  border-radius: 0 5px 5px 0;
  background-color: #DBE5FF;
}

#evaluator-panel {
  flex: 1;
  background-color: cyan;
  grid-row: 2 / span 1;
  grid-column: 2 / span 1;
  border-radius: 5px 0 0 5px;
  display: flex;
  flex-direction: column;
  background-color: #FFF3F3;
}

button {
  background: none;
  border: none;
  font-family: sans-serif;
  color: blue;
  padding: 0;
  margin: 0;
  outline: none;
}

button:hover {
  text-decoration: underline;
}

#stack-tools {
  text-align: right;
  margin-right: 10px;
  margin-bottom: 3px;
}

.stack-frame {
  margin: 0 10px 10px 10px;
  padding: 5px;
  display: grid;
  grid-template-columns: 7em 7em auto 10em 1fr;
  grid-auto-flow: dense;
}

.cell {
  padding: 5px;
  font-size: 14pt;
}

.function-name-cell {
  grid-column: 1;
  grid-row: 1;
}

.add-variable-cell {
  grid-column: 1;
  grid-row: 2 / span 2;
}

.variable-name-cell {
  grid-column: 2;
  text-align: right;
}

.arrow-cell {
  grid-column: 3;
}

.variable-value-cell {
  grid-column: 4;
}

.variable-history-cell {
  color: darkgray;
}

.close-cell {
  color: red;
  cursor: pointer;
  grid-column: 6;
}

.close-cell:hover {
  transform: scale(1.2);
  text-shadow: 0 0 2px;
}

.variable-name-input {
  display: inline-block;
  width: 100%;
}

.old {
  /* Old values are spans, and for some reason, overflowing content doesn't
     wrap between spans. */
  display: inline-block;

  text-decoration: line-through;
  padding-right: 1em;
}

.memory-value-input {
  width: 100%;
}

.space {
  white-space: pre;
}
